# drinks-touch.fd
# https://drinks-touch.fd/
# drinks-touch
# https://github.com/flipdot/drinks-touch/
---
services:
  adminer:
  # You can access the database's frontend at [adminer.localhost](https://adminer.localhost/).
  # This information is required for login:
  #
  # |          |                     |
  # | -------- | ------------------- |
  # | System   | PostgreSQL          |
  # | Server   | postgres            |
  # | Username | [postgres_user]     |
  # | Password | [postgres_password] |
  # | Database | [postgres_db]       |
  #
  # Values in square brackets are [Docker secrets](https://docs.docker.com/engine/swarm/secrets/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.middlewares=redirectscheme
      - traefik.http.routers.adminer.rule=Host(`adminer.${STACK_DOMAIN}`, `adminer.${STACK_DOMAIN_LOCAL}`)
      - traefik.http.routers.adminer_secure.rule=Host(`adminer.${STACK_DOMAIN}`, `adminer.${STACK_DOMAIN_LOCAL}`)
      - traefik.http.routers.adminer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    image: adminer:4@sha256:4d06c61fbc5f21e83e3aebf15912736e4730a814b03adc1063dd1fc9cd22e58d
  drinks-touch:
  # You can access the main project at [localhost](http://localhost/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.drinks-touch.middlewares=redirectscheme
      - traefik.http.routers.drinks-touch.rule=Host(`${STACK_DOMAIN}`, `${STACK_DOMAIN_LOCAL}`, `www.${STACK_DOMAIN}`, `www.${STACK_DOMAIN_LOCAL}`)
      - traefik.http.routers.drinks-touch_secure.rule=Host(`${STACK_DOMAIN}`, `${STACK_DOMAIN_LOCAL}`, `www.${STACK_DOMAIN}`, `www.${STACK_DOMAIN_LOCAL}`)
      - traefik.http.routers.drinks-touch_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.drinks-touch.loadbalancer.server.port=80
    environment:
      DISPLAY: unix${DISPLAY}
    image: flipdot/drinks-touch:dev
    volumes:
    - ../../drinks-touch/drinks_touch/:/app/
    - /tmp/.X11-unix:/tmp/.X11-unix
  ldap:
  # You can access the open source ldap implementation via `phpldapadmin`.
    environment:
      LDAP_ADMIN_PASSWORD: admin
      LDAP_DOMAIN: flipdot.org
    image: osixia/openldap@sha256:3f68751292b43564a2586fc29fb7337573e2dad692b92d4e78e49ad5c22e567b
    ports:
    - 389:389
    - 639:639
  phpldapadmin:
  # You can access the ldap frontend at [phpldapadmin.localhost](http://phpldapadmin.localhost/).
  # This information is required for login:
  #
  # |          |                            |
  # | -------- | -------------------------- |
  # | login dn | cn=admin,dc=flipdot,dc=org |
  # | password | admin                      |
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.phpldapadmin.middlewares=redirectscheme
      - traefik.http.routers.phpldapadmin.rule=Host(`phpldapadmin.${STACK_DOMAIN}`, `phpldapadmin.${STACK_DOMAIN_LOCAL}`)
      - traefik.http.routers.phpldapadmin_secure.rule=Host(`phpldapadmin.${STACK_DOMAIN}`, `phpldapadmin.${STACK_DOMAIN_LOCAL}`)
      - traefik.http.routers.phpldapadmin_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.phpldapadmin.loadbalancer.server.port=80
    environment:
      PHPLDAPADMIN_HTTPS: 'false'
      PHPLDAPADMIN_LDAP_HOSTS: ldap #ldap.flipdot.space
    image: osixia/phpldapadmin:0.9.0@sha256:d112b82be1336f91e028b0348755133fda333992355b533419355a65c32ff9ad
    volumes:
    - phpldapadmin-data:/var/www/phpldapadmin
  postgres:
  # You can access the database via `adminer`.
    environment:
      POSTGRES_DB: drinks
      POSTGRES_PASSWORD: postgres
    image: postgres:16.2-alpine@sha256:951bfda460300925caa3949eaa092ba022e9aec191bbea9056a39e2382260b27
    volumes:
    - postgres-data:/var/lib/postgresql/data
    - ../production/data/postgres/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    - ../production/data/postgres/02-drinks.sql:/docker-entrypoint-initdb.d/02-drinks.sql
  traefik:
  # You can access the reverse proxy's dashboard at [traefik.localhost](https://traefik.localhost/).
  # Traefik enables HTTPS for all services and acts as a load-balancer too.
    command:
    - --api=true
    - --entryPoints.web.address=:80
    - --entryPoints.web-secure.address=:443
    - --providers.docker=true
    - --providers.docker.endpoint=unix:///var/run/docker.sock
    - --providers.docker.exposedByDefault=false
    - --providers.docker.swarmMode=true
    - --providers.file.filename=/dynamic.yml #DARGSTACK-REMOVE
    - --providers.file.watch=true #DARGSTACK-REMOVE
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=redirectscheme
      - traefik.http.routers.traefik.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.service=api@internal
      - traefik.http.routers.traefik_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:v3.0.0@sha256:7996bdae8aaa70eaacf2978b6c949de5b68c0a24ddc3e40c06344ecc88cfaea3
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
    - ./configurations/traefik/dynamic.yml:/dynamic.yml:ro #DARGSTACK-REMOVE
version: "3.7"
volumes:
  phpldapadmin-data:
  # The ldap frontend's data.
    {}
  postgres-data:
  # The database's data.
    {}
